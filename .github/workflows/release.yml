name: Release

on:
  push:
    branches:
      - main

env:
  HUSKY: 0

jobs:
  release:
    runs-on: ubuntu-latest
    env:
      GRAFANA_API_KEY: ${{ secrets.GRAFANA_API_KEY }} # Requires a Grafana API key from Grafana.com.
    permissions: 
      contents: write
      packages: write
      issues: write

    steps:    
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Node.js environment
      uses: actions/setup-node@v3
      with:
        node-version: "16.x"
        cache: 'yarn'

    - name: Setup Go environment 
      uses: actions/setup-go@v3
      with:
        go-version: '1.19'

    - name: Install dependencies
      run: yarn ci

    - name: Build and test frontend
      run: yarn build

    - name: Warn missing Grafana API key
      run: |
        echo Please generate a Grafana API key: https://grafana.com/docs/grafana/latest/developers/plugins/sign-a-plugin/#generate-an-api-key
        echo Once done please follow the instructions found here: https://github.com/${{github.repository}}/blob/main/README.md#using-github-actions-release-workflow
      if: ${{ env.GRAFANA_API_KEY == '' }}

    - name: Sign plugin
      run: yarn sign
      if: ${{ env.GRAFANA_API_KEY != '' }}

    - name: Get plugin metadata
      id: metadata
      run: |
        sudo apt-get install jq

        export GRAFANA_PLUGIN_ID=$(cat dist/plugin.json | jq -r .id)
        export GRAFANA_PLUGIN_VERSION=$(cat dist/plugin.json | jq -r .info.version)
        export GRAFANA_PLUGIN_TYPE=$(cat dist/plugin.json | jq -r .type)
        export GRAFANA_PLUGIN_ARTIFACT=${GRAFANA_PLUGIN_ID}-${GRAFANA_PLUGIN_VERSION}.zip
        export GRAFANA_PLUGIN_ARTIFACT_CHECKSUM=${GRAFANA_PLUGIN_ARTIFACT}.md5

        echo "plugin-id=${GRAFANA_PLUGIN_ID}" >> $GITHUB_OUTPUT
        echo "plugin-version=${GRAFANA_PLUGIN_VERSION}" >> $GITHUB_OUTPUT
        echo "plugin-type=${GRAFANA_PLUGIN_TYPE}" >> $GITHUB_OUTPUT
        echo "archive=${GRAFANA_PLUGIN_ARTIFACT}" >> $GITHUB_OUTPUT
        echo "archive-checksum=${GRAFANA_PLUGIN_ARTIFACT_CHECKSUM}" >> $GITHUB_OUTPUT

        echo "github-tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT

    - name: Read changelog
      id: changelog
      run: |
        awk '/^## / {s++} s == 1 {print}' CHANGELOG.md > release_notes.md
        echo "path=release_notes.md" >> $GITHUB_OUTPUT

    - name: Package plugin
      id: package-plugin
      run: |
        mv dist ${{ steps.metadata.outputs.plugin-id }}
        zip ${{ steps.metadata.outputs.archive }} ${{ steps.metadata.outputs.plugin-id }} -r
        md5sum ${{ steps.metadata.outputs.archive }} > ${{ steps.metadata.outputs.archive-checksum }}
        echo "checksum=$(cat ./${{ steps.metadata.outputs.archive-checksum }} | cut -d' ' -f1)" >> $GITHUB_OUTPUT

    - name: Validate plugin
      run: |
        git clone https://github.com/grafana/plugin-validator
        pushd ./plugin-validator/pkg/cmd/plugincheck2
        go install
        popd
        plugincheck2 -config ./plugin-validator/config/default.yaml ${{ steps.metadata.outputs.archive }}

    - name: Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
          git config --global user.email ${{ secrets.GH_EMAIL }}
          git config --global user.name ${{ secrets.GH_USER }}
          yarn semantic-release